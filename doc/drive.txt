[ DRIVE CLASS ]
Sectors are 0-based, so the sectors of a drive range from [0, sectors).

static drive new(string driveAddress)
	Returns a new drive with the given drive address.

static component<drive> getDrive(string driveAddress)
	Returns a proxy of a drive component given its address.

void makeOCPT()
	NULLs the entire first sector of the drive and writes the OCPT signature.

bool isAvailable()
	Returns true if the drive is still available (the component is still attached).

bool isOCPT()
	Returns true if the drive is an OCPT drive.

string getAddress()
	Returns the address of the drive.

component<drive> getProxy()
	Returns the drive proxy.

uint64 getCapacity()
	Returns the capacity of the drive.

uint32 getSectors()
	Returns the number of sectors the drive contains.

any getLabel()
	Returns the label of the drive.

void setLabel(any label)
	Sets the label of the drive.

uint32 resolveSector(int64 sector)
	Resolves the sector into its logical value.
	Negative indices indicate a sector starting from the end of the drive (-1 = last sector).

uint32 resolveCount(int64 sector, uint32 count)
	Clamps count between [0, sectors - resolveSector(sector)).
	This ensures that sector + count is less than the total number of sectors.

string readSector(int64 sector)
	Reads a sector from the drive.

array<string> readSectors(int64 sector, uint32 count = MAX)
	Reads a continuous range of sectors and returns what was read.
	The n field of the returned array indicates the number of sectors actually read.

void writeSector(int64 sector, string buffer)
	Writes buffer into a sector in the drive.

uint32 writeSectors(int64 sector, string buffer, string fill = "", uint32 count = MAX)
	Writes a large buffer into a range of continuous sectors. The number of sectors will not exceed count.
	Any remaining space in the last sector written to will be filled.
	Returns the number of sectors actually written to, at most ceil(#buffer/512).

void moveSector(drive other, int64 src, int64 dest)
	Copies sector of the current drive to the sector of another.

uint32 moveSectors(drive other, int64 src, int64 dest, uint32 count = MAX)
	Copies sectors from the current drive to the other. The number of sectors will not exceed count.
	Returns the number of sectors actually copied.

void fillSector(int64 sector, string fill = "\0")
	Fills a sector with the given string (repeated to reach a length of 512)

uint32 fillSectors(int64 sector, string fill = "\0", uint32 count = MAX)
	Fills a continuous range of sectors.
	Returns the number of sectors actually filled.
